name: Create Blogger Post from Issue

on:
  issues:
    types: [opened]

jobs:
  post-to-blogger:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Write issue body to a markdown file
        # 安全にファイルに書き出すために、環境変数を経由させます
        run: echo "$ISSUE_BODY" > issue.md
        env:
          ISSUE_BODY: ${{ github.event.issue.body }}

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y pandoc

      - name: Convert Markdown to HTML
        run: pandoc issue.md -f markdown -t html -o post.html
      
      # 【デバッグ用】変換されたHTMLの中身を確認します
      - name: Show HTML content for debugging
        run: |
          echo "--- HTML Content Preview ---"
          cat post.html
          echo "--------------------------"

      - name: Authenticate to Google Cloud
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      # 4. JSONデータを作成してBloggerに投稿します（改善版）
      - name: Create JSON and Post to Blogger
        run: |
          # デバッグのために実行コマンドをログに表示します
          set -x

          # Pythonスクリプトをファイルとして作成します
          cat << 'EOF' > create_payload.py
          import json, os, sys
          # タイトルをコマンドの引数から安全に受け取ります
          issue_title = sys.argv[1]
          html_content = open("post.html").read()
          payload = {
              "title": issue_title,
              "content": html_content
          }
          print(json.dumps(payload))
          EOF

          # Pythonスクリプトを実行して、投稿データ(JSON)を作成します
          BODY_JSON=$(python create_payload.py "${{ github.event.issue.title }}")
          
          # 【デバッグ用】作成されたJSONの中身を確認します
          echo "--- JSON Payload Preview ---"
          echo "$BODY_JSON"
          echo "--------------------------"

          # curlを使ってBlogger APIにPOSTリクエストを送ります
          curl --fail -X POST \
            -H "Authorization: Bearer ${{ steps.auth.outputs.access_token }}" \
            -H "Content-Type: application/json" \
            -d "$BODY_JSON" \
            "https://www.googleapis.com/blogger/v3/blogs/${{ secrets.BLOGGER_BLOG_ID }}/posts/?isDraft=false"
